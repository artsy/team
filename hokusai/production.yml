---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: team-web
  namespace: default
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: team
        component: web
        layer: application
      name: team-web
    spec:
      containers:
        - name: team-web
          env:
            - name: PORT
              value: "3000"
            - name: NODE_ENV
              value: production
          envFrom:
            - configMapRef:
                name: team-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/team:production
          imagePullPolicy: Always
          ports:
            - name: team-http
              containerPort: 3000
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              memory: 512Mi
          readinessProbe:
            httpGet:
              port: team-http
              path: /api/health
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
      dnsPolicy: Default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - foreground

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: team-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: team-web
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: team
    component: web
    layer: application
  name: team-web-internal
  namespace: default
spec:
  ports:
    - port: 3000
      protocol: TCP
      name: http
      targetPort: 3000
  selector:
    app: team
    layer: application
    component: web
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: team-external-auth
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "http://team-web-internal.default.svc.cluster.local:3000/api/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://api.artsy.net/oauth2/authorize?response_type=code&client_id={{ PRODUCTION_APP_ID }}&redirect_uri=https://$host/oauth2/callback?rd=$escaped_request_uri"
spec:
  rules:
    - host: team.artsy.net
      http:
        paths:
          - path: /
            backend:
              serviceName: team-web-internal
              servicePort: 3000

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: team-oauth
spec:
  rules:
    - host: team.artsy.net
      http:
        paths:
          - path: /oauth2
            backend:
              serviceName: team-web-internal
              servicePort: 3000
